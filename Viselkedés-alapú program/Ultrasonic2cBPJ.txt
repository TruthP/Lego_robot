package bpj5;

import lejos.hardware.motor.Motor;
import lejos.robotics.navigation.DifferentialPilot;
import lejos.robotics.navigation.RotateMoveController;
import lejos.robotics.subsumption.Behavior;
import lejos.utility.Delay;

public class Ultrasonic2cBPJ implements Behavior {

	SampleBPJ us2;
	float dist2;
	DifferentialPilot pilot = new DifferentialPilot(1.5F, 6, Motor.B, Motor.C, true);
	static boolean startScore = false;
	boolean suppressed;

	public Ultrasonic2cBPJ(SampleBPJ us2, RotateMoveController p) {
		this.us2 = us2;
		this.pilot = (DifferentialPilot) p;

		Motor.A.setSpeed(900);
		Motor.B.setSpeed(300);
		Motor.C.setSpeed(300);
		pilot.setLinearSpeed(2.0);
		pilot.setAngularSpeed(40.0);

	}

	@Override
	public boolean takeControl() {
		dist2 = us2.mesure() * 100;

		return ((dist2 < (RotateBPJ.returnStartingDistance() + 1.0))
				&& (dist2 > (RotateBPJ.returnStartingDistance() - 1.0)) && CompassBPJ.returnStartUltrasonic2()
				&& !startScore);
	}

	@Override
	public void action() {
		suppressed = false;
		while (!suppressed) {

			System.out.println(dist2);
			pilot.stop();
			pilot.rotate(-50);

			startScore = true;
			Delay.msDelay(10);

		}

	}

	public static boolean returnStartScore() {
		return startScore;
	}

	@Override
	public void suppress() {
		suppressed = true;
	}

}
