package bpj5;

import lejos.hardware.motor.Motor;
import lejos.robotics.navigation.DifferentialPilot;
import lejos.robotics.navigation.RotateMoveController;
import lejos.robotics.subsumption.Behavior;
import lejos.utility.Delay;

public class Compass2BPJ implements Behavior {

	SampleBPJ cs;
	float compassAngle;
	DifferentialPilot pilot = new DifferentialPilot(1.5F, 6, Motor.B, Motor.C, true);
	boolean suppressed;

	public Compass2BPJ(SampleBPJ cs, RotateMoveController p) {
		this.cs = cs;
		this.pilot = (DifferentialPilot) p;

		pilot.setLinearSpeed(1.5);
		Motor.B.setSpeed(300);
		Motor.C.setSpeed(300);
		pilot.setAngularSpeed(40.0);
		System.out.println(UltrasonicBPJ.returnStartCompass());

	}

	@Override
	public boolean takeControl() {
		compassAngle = cs.mesure();

		return (UltrasonicBPJ.returnStartCompass() && !((compassAngle >= RotateBPJ.returnStartingPosition() - 2.0)
				&& (compassAngle <= RotateBPJ.returnStartingPosition() + 2.0)));
	}

	@Override
	public void action() {
		suppressed = false;
		while (!suppressed) {
			compassAngle = cs.mesure();
			Delay.msDelay(10);

			pilot.rotateRight();

		}
	}

	@Override
	public void suppress() {
		suppressed = true;

	}

}
